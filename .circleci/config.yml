# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
orbs:
  php: circleci/php@1.1.0
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4.9-cli-buster

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: composer:latest

    steps:      
      - checkout
      - run: | 
          sudo apt update -y && 
          sudo apt install -y libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng-dev libgmp-dev re2c libmhash-dev libmcrypt-dev file zlib1g-dev  && 
          sudo ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/local/include/ 

      - run: ls -al /usr/local/lib/php/extensions/no-debug-non-zts-20190902
    
      - run: mkdir php-ext-cache
      - restore_cache:
          keys:
            - pecl-v1-{{ checksum "circle-ci-scripts/install-php-extensions.sh" }}
            - pecl-v1-
      - run:
          name: Copying restored pecl extensions cache into extensions directory 
          command: sudo cp -R php-ext-cache/. /usr/local/lib/php/extensions/no-debug-non-zts-20190902/

      - run: 
          name: Install Extensions if not cached.
          command: |
            if [ ! -f /usr/local/lib/php/extensions/no-debug-non-zts-20160303/mcrypt.so ]; then 
              ./circle-ci-scripts/install-php-extensions.sh;
            fi
      - run:
          name: Copying pecl extensions to temp directory which will be cached
          command: sudo cp -R /usr/local/lib/php/extensions/no-debug-non-zts-20190902/* php-ext-cache/

      - save_cache:         
          key: pecl-v1-{{ checksum "circle-ci-scripts/install-php-extensions.sh" }}
          paths:
            - php-ext-cache
      - run: sudo docker-php-ext-install j$(nproc) gmp gd mcrypt

#       - run: | 
#           sudo pecl install mcrypt-1.0.4 && 
#           sudo docker-php-ext-enable mcrypt && 
#           sudo docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/  && 
#           sudo docker-php-ext-install -j$(nproc) gd  && 
#           sudo docker-php-ext-configure gmp  && 
#           sudo docker-php-ext-install gmp  && 
#           sudo docker-php-ext-install zip
      - php/install-composer:
          install-version: 2.1.0
      - php/install-packages

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: |
          php -v && 
          composer --version && 
          composer install -n --prefer-dist && 
          ./vendor/bin/phpunit --version       

      - run: pecl config-show 

      - save_cache:
           key: v1-dependencies-{{ checksum "composer.json" }}
           paths:
             - ./vendor

#       - restore_cache:
#           keys:
#             - node-v1-{{ checksum "package.json" }}
#             - node-v1-
#       - run: yarn install
#       - save_cache:
#           key: node-v1-{{ checksum "package.json" }}
#           paths:
#             - node_modules
# 
#       # prepare the database
#       - run: touch storage/testing.sqlite
#       - run: php artisan migrate --env=testing --database=sqlite_testing --force
# 
#       # run tests with phpunit or codecept
#       #- run: ./vendor/bin/phpunit
#       - run: ./vendor/bin/codecept build
#       - run: ./vendor/bin/codecept run
