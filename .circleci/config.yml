# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
orbs:
  php: circleci/php@1.1.0
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4.9-cli-buster
#      - image: trufflesuite/ganache-cli:latest

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: composer:latest

    steps:      
      - setup_remote_docker
      - checkout      
      - run: | 
          sudo apt update -y && 
          sudo apt install -y libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng-dev libgmp-dev re2c libmhash-dev libmcrypt-dev file zlib1g-dev  && 
          sudo ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/local/include/     
      
      - run: mkdir php-ext-cache
      - restore_cache:
          keys:
            - extensions-v1-{{ checksum "circle-ci-scripts/install-php-extensions.sh" }}
            - extensions-v1-
      - run:
          name: Copying restored extensions cache into extensions directory 
          command: sudo cp -R php-ext-cache/. /usr/local/lib/php/extensions/no-debug-non-zts-20190902/
      # - run: pecl config-show 
      - run: 
          name: Install Extensions (if not cached)
          command: |
            if [ ! -f /usr/local/lib/php/extensions/no-debug-non-zts-20160303/mcrypt.so ]; then 
              ./circle-ci-scripts/install-php-extensions.sh;
            fi
      - run:
          name: Copying extensions to temp directory for cache
          command: sudo cp -R /usr/local/lib/php/extensions/no-debug-non-zts-20190902/* php-ext-cache/
      - save_cache:         
          key: extensions-v1-{{ checksum "circle-ci-scripts/install-php-extensions.sh" }}
          paths:
            - php-ext-cache/
      
      - run: 
          name: View PHP environment
          command: |         
            php -v && 
            composer --version && 
            ./vendor/bin/phpunit --version      

      - php/install-composer:
          install-version: 2.1.0      
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.lock" }}
            - v1-dependencies-
      - php/install-packages
      - save_cache:
           key: v1-dependencies-{{ checksum "composer.json" }}
           paths:
             - ./vendor

         # echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin    
      - run:
          name: Run Ganach Cli for testing
          command: |         
            docker run trufflesuite/ganache-cli:latest -d -v ./ganache_data:/ganache_data node /app/ganache-core.docker.cli.js  node /app/ganache-core.docker.cli.js  --hostname '0.0.0.0' --deterministic --db=/ganache_data --mnemonic 'minimum symptom minute gloom tragic situate silver mechanic salad amused elite beef' --networkId '5777'
          background: true
      
      # TODO 
      # - ganache_data dir ethereum-php/tests/TestEthClient/GanacheClientDb
      # - Make workflow Jobs/jobs dependent
      #  - CodeGenerators (verify that no generated file is manually changed)
      #   - Static test (EthTest)
      #   - Mainnet Test 
      #   - Contract tests (TestEthClient)
      - run:
          name: Phpunit All
          command: |         
            ./vendor/bin/phpunit
workflows:
  build-and-test:
    jobs:
      - build:
          context:
            - infura

